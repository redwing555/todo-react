{"version":3,"sources":["functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/TodoContainer.js","index.js","functionBased/components/TodoItem.module.css"],"names":["TodoItem","props","useState","editing","setEditing","useEffect","console","log","viewMode","editMode","display","todo","completed","id","title","className","styles","item","onDoubleClick","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProp","fontStyle","color","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodosList","todos","map","deleteTodoProps","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0740595a.chunk.js","sourcesContent":["/* eslint-disable  */\n\nimport React, {useState, useEffect} from 'react';\nimport styles from \"./TodoItem.module.css\"\n\nconst TodoItem = props => {\n  const [editing, setEditing] = useState(false)\n\n  const handleEditing = () => {\n    setEditing(true)\n  }\n  const handleUpdatedDone = event => {\n    if (event.key === \"Enter\") {\n        setEditing(false)\n      }\n  }\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up...\")\n    }\n  }, [])\n  \n  \n    let viewMode = {}\n    let editMode = {}\n\n    if (editing) {\n    viewMode.display = \"none\"\n    } else {\n    editMode.display = \"none\"\n    }\n\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#595959\",\n        opacity: 0.4,\n        textDecoration: \"line-through\",\n      }\n    const { completed, id, title } = props.todo\n\n    return (\n        \n    <li className={styles.item}>\n        <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n        type=\"checkbox\"\n         className={styles.checkbox}\n        checked = {completed}\n           onChange={() => props.handleChangeProps(id)}/>\n        <button onClick={() => props.deleteTodoProp(id)}>Delete</button>\n        <span style={completed ? completedStyle : null}>\n        {title}\n        </span>\n        </div>\n        <input\n         type=\"text\"\n          style={editMode}\n           className={styles.textInput}\n           value={title}\n           onChange={(e) => props.setUpdate(e.target.value, id)} \n           onKeyDown={handleUpdatedDone}/>\n        \n    </li>\n    \n        );\n}\n\nexport default TodoItem;\n\n/* eslint-enable  */\n","import React from 'react';\nimport TodoItem from './TodoItem';\n/* eslint-disable  */\n\nconst TodosList = props => {\n  \n    return (\n      <ul>\n        {props.todos.map((todo) => (\n          <TodoItem\n           key={todo.id}\n           todo={todo}\n           handleChangeProps={props.handleChangeProps}\n           deleteTodoProp={props.deleteTodoProps}\n           setUpdate={props.setUpdate} />\n        ))}\n      </ul>\n\n    );\n  \n  /* eslint-enable  */\n};\n\nexport default TodosList;\n","import React from 'react';\n/* eslint-disable  */\n\nconst Header = () => {\n\n    const headerStyle = {\n\n            padding: \"20px 0\",\n            lineHeight: \"1.5em\",\n    }\n\n    return (\n         <header style={headerStyle}>\n    <h1\n      style={{\n        fontSize: '6rem',\n        fontWeight: '600',\n        marginBottom: '2rem',\n        lineHeight: '1em',\n        color: '#ececec',\n        textTransform: 'lowercase',\n        textAlign: 'center',\n      }}\n    >\n      todos\n    </h1>\n  </header>)\n};\n/* eslint-enable  */\nexport default Header;\n","import React, { useState } from 'react';\n/* eslint-disable  */\n\nconst InputTodo = props => {\n  const [inputText, setInputText] = useState({\n    title: \"\",\n  })\n\n  const onChange = e => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (inputText.title.trim()) {\n      props.addTodoProps(inputText.title)\n      setInputText({\n        title: \"\",\n      })\n    } else {\n      alert(\"Please write item\")\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <button className=\"input-submit\">Submit</button>\n    </form>\n  )\n}\n/* eslint-enable  */\nexport default InputTodo;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport TodosList from './TodosList';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\n\nconst TodoContainer = () => {\n  /* eslint-disable  */\n\n  const [todos, setTodos] = useState(getInitialTodos())\n  function getInitialTodos() {\n    // getting stored items\n    const temp = localStorage.getItem(\"todos\")\n    const savedTodos = JSON.parse(temp)\n    return savedTodos || []\n  }\n\n  const handleChange = id => {\n    setTodos(prevState =>\n      prevState.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          }\n        }\n        return todo\n      })\n    )\n  }\n  // useEffect(()=> {\n  //   const temp = localStorage.getItem(\"todos\")\n  //   const loadedTodos = JSON.parse(temp)\n\n  //   if (loadedTodos) {\n  //     setTodos(loadedTodos)\n  //   }\n  //   }, [])\n \n\n    useEffect(() => {\n      // storing todos items\n      const temp = JSON.stringify(todos)\n      localStorage.setItem(\"todos\", temp)\n    }, [todos])\n\n    const delTodo = id => {\n      setTodos([\n        ...todos.filter(todo => {\n          return todo.id !== id\n        }),\n      ])\n    }\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    }\n    setTodos([...todos, newTodo])\n  }\n\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.title = updatedTitle\n        }\n        return todo\n      })\n    )\n  }\n  \n \n  return (\n    <div className=\"container\">\n      <div className=\"inner\">\n        <Header />\n        <InputTodo addTodoProps={addTodoItem} />\n        <TodosList\n          todos={todos}\n          handleChangeProps={handleChange}\n          deleteTodoProps={delTodo}\n          setUpdate={setUpdate}\n        />\n      </div>\n    </div>\n  )\n}\n  /* eslint-enable  */\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TodoContainer from './functionBased/components/TodoContainer';\n\n// stylesheet\nimport './functionBased/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__37sXw\",\"checkbox\":\"TodoItem_checkbox__3ZODs\",\"textInput\":\"TodoItem_textInput__1E6_y\"};"],"sourceRoot":""}